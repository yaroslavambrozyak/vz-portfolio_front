{"version":3,"sources":["portfolio/Portfolio.module.css","preload/Preload.module.css","logo.svg","preload/load.gif","serviceWorker.js","preload/Preload.js","portfolio/Portfolio.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Preload","setTimeout","console","log","setState","visible","className","style","background","src","PreloadLogo","alt","preload_logo","React","Component","Portfolio","side_nav","main_container","image","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,eAAiB,kCAAkC,wBAAwB,yCAAyC,MAAQ,yBAAyB,SAAW,4BAA4B,yBAAyB,4C,oBCAvOD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,yBAAyB,wCAAwC,aAAe,gC,kBCD3ID,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,kKCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,iECQSC,E,2KAjBG,IAAD,OACTC,YAAW,WACPC,QAAQC,IAAI,SACZ,EAAKC,SAAS,CAAEC,SAAS,MAC1B,Q,+BAIH,OACI,yBAAKC,UAAWC,IAAMC,YAClB,yBAAKC,IAAKC,IAAaC,IAAI,OAAOL,UAAWC,IAAMK,oB,GAd7CC,IAAMC,W,gBCiCbC,E,uKAhCP,OACI,6BACI,yBAAKT,UAAWC,IAAMS,WACtB,yBAAKV,UAAWC,IAAMU,gBAClB,yBAAKX,UAAWC,IAAMW,MAAOT,IAAI,4GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,2GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,4GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,2GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,2GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,2GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,2GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,4GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,2GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,2GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,2GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,2GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,4GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,2GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,2GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,2GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,2GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,2GACjC,yBAAKH,UAAWC,IAAMW,MAAOT,IAAI,kH,GAzB7BI,IAAMC,WCK9BK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEFC,SAASC,eAAe,SHsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7B,QAAQ6B,MAAMA,EAAMC,c","file":"static/js/main.26e1eda4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"Portfolio_main_container__yhVGl\",\"preload-img-container\":\"Portfolio_preload-img-container__nFr7b\",\"image\":\"Portfolio_image__1h0JE\",\"side_nav\":\"Portfolio_side_nav__2iNw6\",\"preload-hide-animation\":\"Portfolio_preload-hide-animation__3DuTW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Preload_background__1hOft\",\"preload-hide-animation\":\"Preload_preload-hide-animation__14sgH\",\"preload_logo\":\"Preload_preload_logo__3wTvt\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/load.fb72ac66.gif\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport style from './Preload.module.css'\r\nimport PreloadLogo from './load.gif';\r\n\r\n\r\nclass Preload extends React.Component {\r\n\r\n\r\n\r\n    startTimer() {\r\n        setTimeout(() => {\r\n            console.log('event');\r\n            this.setState({ visible: false });\r\n        }, 2500);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.background}>\r\n                <img src={PreloadLogo} alt='logo' className={style.preload_logo} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Preload;","import React from 'react';\r\nimport style from './Portfolio.module.css';\r\n\r\nclass Portfolio extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={style.side_nav}></div>\r\n                <div className={style.main_container}>\r\n                    <img className={style.image} src='https://cdnb.artstation.com/p/assets/images/images/018/622/041/large/vlx-zvarun-study-5s.jpg?1560092935'></img>\r\n                    <img className={style.image} src='https://cdnb.artstation.com/p/assets/images/images/019/215/045/large/vlx-zvarun-study-2.jpg?1562539028'></img>\r\n                    <img className={style.image} src='https://cdna.artstation.com/p/assets/images/images/018/762/520/large/vlx-zvarun-study-6s.jpg?1560620589'></img>\r\n                    <img className={style.image} src='https://cdnb.artstation.com/p/assets/images/images/018/388/297/large/vlx-zvarun-study-2.jpg?1559178590'></img>\r\n                    <img className={style.image} src='https://cdna.artstation.com/p/assets/images/images/019/193/162/large/vlx-zvarun-study-1.jpg?1562429893'></img>\r\n                    <img className={style.image} src='https://cdnb.artstation.com/p/assets/images/images/018/388/297/large/vlx-zvarun-study-2.jpg?1559178590'></img>\r\n                    <img className={style.image} src='https://cdnb.artstation.com/p/assets/images/images/019/215/045/large/vlx-zvarun-study-2.jpg?1562539028'></img>\r\n                    <img className={style.image} src='https://cdnb.artstation.com/p/assets/images/images/018/622/041/large/vlx-zvarun-study-5s.jpg?1560092935'></img>\r\n                    <img className={style.image} src='https://cdna.artstation.com/p/assets/images/images/019/193/162/large/vlx-zvarun-study-1.jpg?1562429893'></img>\r\n                    <img className={style.image} src='https://cdnb.artstation.com/p/assets/images/images/019/215/045/large/vlx-zvarun-study-2.jpg?1562539028'></img>\r\n                    <img className={style.image} src='https://cdna.artstation.com/p/assets/images/images/019/193/162/large/vlx-zvarun-study-1.jpg?1562429893'></img>\r\n                    <img className={style.image} src='https://cdnb.artstation.com/p/assets/images/images/019/215/045/large/vlx-zvarun-study-2.jpg?1562539028'></img>\r\n                    <img className={style.image} src='https://cdna.artstation.com/p/assets/images/images/018/762/520/large/vlx-zvarun-study-6s.jpg?1560620589'></img>\r\n                    <img className={style.image} src='https://cdnb.artstation.com/p/assets/images/images/019/215/045/large/vlx-zvarun-study-2.jpg?1562539028'></img>\r\n                    <img className={style.image} src='https://cdna.artstation.com/p/assets/images/images/019/193/162/large/vlx-zvarun-study-1.jpg?1562429893'></img>\r\n                    <img className={style.image} src='https://cdnb.artstation.com/p/assets/images/images/018/388/297/large/vlx-zvarun-study-2.jpg?1559178590'></img>\r\n                    <img className={style.image} src='https://cdnb.artstation.com/p/assets/images/images/019/215/045/large/vlx-zvarun-study-2.jpg?1562539028'></img>\r\n                    <img className={style.image} src='https://cdna.artstation.com/p/assets/images/images/019/193/162/large/vlx-zvarun-study-1.jpg?1562429893'></img>\r\n                    <img className={style.image} src='https://cdnb.artstation.com/p/assets/images/images/018/622/041/large/vlx-zvarun-study-5s.jpg?1560092935'></img>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Portfolio;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Preload from './preload/Preload';\nimport Portfolio from './portfolio/Portfolio'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Preload/>\n    <Portfolio/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}